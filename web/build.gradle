buildscript {
    repositories {
        jcenter()
    }
}

plugins {
    id "com.jfrog.bintray" version "1.8.4"
}
plugins {
    id "org.gretty" version "2.2.0"
}
configurations.all {
    resolutionStrategy.cacheChangingModulesFor 0, 'seconds'
}
apply plugin: 'war'
apply from: "$rootDir/gradle/sshDeploy.gradle"

repositories {
    maven {
        url "https://repo1.maven.org/maven2/"
    }

    maven {
        url "https://repo.spring.io/plugins-release/"
    }
}

dependencies {
    compile project(':repository')
    providedCompile 'javax.servlet:servlet-api:2.5'
    runtime 'javax.servlet:jstl:1.2'
}

task sourcesJar(type: Jar) {
    baseName 'deploy-todo'
    classifier 'sources'
    from sourceSets.main.allSource
}

task javadocJar(type: Jar, dependsOn: javadoc) {
    baseName 'deploy-todo'
    classifier 'javadoc'
    from javadoc.destinationDir
}

artifacts {
    archives sourcesJar
    archives javadocJar
}

task createBuildInfoFile {
    doLast {
        def buildInfoFile = new File("$buildDir/build-info.properties")
        Properties props = new Properties()
        props.setProperty('version', project.version.toString())
        props.setProperty('timestamp', project.buildTimestamp)
        props.store(buildInfoFile.newWriter(), null)
    }
}

war {
    dependsOn createBuildInfoFile
    baseName = 'deploy-todo'

    from(buildDir) {
        include 'build-info.properties'
        into('WEB-INF/classes')
    }
}

apply plugin: 'maven-publish'

publishing {
    publications {
        toDoWebApp(MavenPublication) {
            from components.web

            groupId 'org.camel.test'
            artifactId 'deploy-todo-web'
            version project.version.toString()
            artifact sourcesJar
            artifact javadocJar

            pom.withXml {
                def root = asNode()
                root.appendNode('name', 'todo web application')
                root.appendNode('description', 'todo application')
                root.appendNode('inceptionYear', '2020')

                def license = root.appendNode('licenses').appendNode('license')
                license.appendNode('name', 'The Apache Software License, Version 2.0')
                license.appendNode('url', 'http://www.apache.org/licenses/LICENSE-2.0.txt')
                license.appendNode('distribution', 'repo')

                def developer = root.appendNode('developers').appendNode('developer')
                developer.appendNode('id', 'camel')
                developer.appendNode('name', 'wangshuaijie')
                developer.appendNode('email', 'bobwa1984@gmail.com')
            }


        }
    }
}

bintray {
    user = project.hasProperty('bintrayUser') ? project.property('bintrayUser') : System.getenv('BINTRAY_USER')
    key = project.hasProperty('bintrayApiKey') ? project.property('bintrayApiKey') : System.getenv('BINTRAY_API_KEY')
    publications = ['toDoWebApp']

    pkg {
        repo = 'test'
        name = 'listing_15_06-11-todo-ssh-deploy'
        userOrg = 'wsjorg'
        licenses = ['Apache-2.0']
        vcsUrl = 'https://github.com/camel1984/listing_15_06-11-todo-ssh-deploy.git'
        version {
            name = project.version.toString()
            desc = 'listing_15_06-11-todo-ssh-deploy'
            released  = new Date()
            vcsTag = project.version.toVCSTag()
            attributes = ['gradle-plugin': 'com.use.less:com.use.less.gradle:gradle-useless-plugin']
        }
    }
}